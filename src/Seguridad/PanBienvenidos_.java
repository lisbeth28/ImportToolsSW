/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Seguridad;

import FormulariosMantenimiento.Formulario_Empleado;
import MantenimientoBD.MantenimientoDatos;
import Otras_Clases.Mensajes;
import java.awt.BorderLayout;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import panFondos.PnlFondoInicio;

/**
 *
 * @author M
 */
public final class PanBienvenidos_ extends javax.swing.JFrame {

     Thread hilo;
    int num=0;
    Object objeto = new Object(); 
    
    public PanBienvenidos_() {
        initComponents();
        this.requestFocus();
        this.setLocationRelativeTo(null); 
        setLocationRelativeTo(null);
        botonok.setVisible(false);
        iniciaCuenta();
        cargarFondo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barra = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        botonok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Comprobar Datos ...");

        jLabel1.setFont(new java.awt.Font("Nyala", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gif/slogan_bienvenidos.gif"))); // NOI18N

        botonok.setFont(new java.awt.Font("Nyala", 0, 14)); // NOI18N
        botonok.setText("OK");
        botonok.setEnabled(false);
        botonok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonokActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonok, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(112, 112, 112))))
            .addComponent(barra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonok, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonokActionPerformed
       panAcceso pro = new panAcceso();
       pro.setVisible(true);  
       this.dispose(); 
       pro.requestFocus();
    }//GEN-LAST:event_botonokActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanBienvenidos_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanBienvenidos_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanBienvenidos_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanBienvenidos_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PanBienvenidos_().setVisible(true);
            }
        });
    }
    
     public void iniciaCuenta() {
       if( hilo == null ) {
       hilo = new ThreadCarga();
       hilo.start();}
  }

    private void cargarFondo() {
        PnlFondoInicio F = new  PnlFondoInicio ();
        F.setSize(466,200); // [455, 192]
        this.add(F,BorderLayout.CENTER);
        this.pack();
       
    }

   class ThreadCarga extends Thread {
     @Override
      public void run() {
      int min = 0;
      int max = 20;
      barra.setValue( min );
      barra.setMinimum( min );
      barra.setMaximum( max );
      for (int i=min; i<= max; i++ ) {
      barra.setValue( i );
      num=i;
      if(i==max){
           if(existeUsuario() == true){
               
               barra.setVisible(false); 
               
               botonok.setVisible(true);
               botonok.setEnabled(true);
           }
            else
               botonok.setVisible(false);      
      }
      synchronized( objeto ) {
       try {
             objeto.wait( 100 );
   
      } catch( InterruptedException e ) { }
      }
      } 
      hilo = null;
    }
 }
   
   private boolean existeUsuario() {
       boolean rspst=true;
       if(encontrarUsuario()==false)
       { int rsp=Mensajes.confirmar(this,"No se encuentra ningun Administrador registrado en el Sistema "+"\n"
               +"Desea registra un Administrador ahora ??");
         if(rsp==0){
            Formulario_Empleado E1= new  Formulario_Empleado(1);
            E1.setVisible(true);  
            this.setVisible(false);
           rspst=false;
        } else   
           System.exit(0); 
      } return rspst;
    }
   
   private boolean encontrarUsuario() {
        boolean rspst=true;
        String codigo=null;
        try {
            MantenimientoDatos objmante = new MantenimientoDatos();// abrimos conexion 
            String sql = "SELECT e.idEmpleado from empleado e JOIN  cargo C using(idCargo) "
                    + "where C.Nombre ='Administrador';"; // selecciona a todos los empleados ordenando por el codigo
            PreparedStatement ps = objmante.conexion.prepareStatement(sql);
            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next())  
                   codigo = rs.getString("idEmpleado");
            }
            objmante.CerrarConexion();
            if(codigo== null ||codigo.equals(""))
            rspst=false;
        } catch (Exception e) {
             this.setVisible(false); 
            System.exit(0);  
        }
        
        return rspst;
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barra;
    private javax.swing.JButton botonok;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
